#!/bin/bash

# üöÄ SCRIPT DE DEPLOY GRATUITO - RENDER + VERCEL
echo "üöÄ INICIANDO DEPLOY GRATUITO..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ] || [ ! -d "backend" ]; then
    echo -e "${RED}‚ùå Execute este script no diret√≥rio raiz do projeto!${NC}"
    exit 1
fi

echo -e "${BLUE}üìã CHECKLIST PARA DEPLOY GRATUITO${NC}"
echo "=================================="

# Verificar se o backend est√° configurado
echo -e "${YELLOW}üîç Verificando configura√ß√£o do backend...${NC}"
if [ ! -f "backend/.env" ]; then
    echo -e "${RED}‚ùå backend/.env n√£o encontrado!${NC}"
    echo "üí° Execute: cp backend/.env.example backend/.env"
    exit 1
fi

if [ ! -f "backend/package.json" ]; then
    echo -e "${RED}‚ùå backend/package.json n√£o encontrado!${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Backend configurado${NC}"

# Verificar se o frontend est√° pronto
echo -e "${YELLOW}üîç Verificando configura√ß√£o do frontend...${NC}"
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå package.json n√£o encontrado!${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Frontend configurado${NC}"

# Instru√ß√µes para o usu√°rio
echo ""
echo -e "${BLUE}üìù INSTRU√á√ïES DE DEPLOY${NC}"
echo "========================="
echo ""
echo -e "${YELLOW}PASSO 1: DEPLOY DO BACKEND (RENDER)${NC}"
echo "1. Acesse: https://render.com"
echo "2. Fa√ßa login com GitHub"
echo "3. Clique em 'New +' ‚Üí 'Web Service'"
echo "4. Selecione este reposit√≥rio"
echo "5. Configure:"
echo "   - Root Directory: backend"
echo "   - Build Command: npm install"
echo "   - Start Command: npm start"
echo "   - Plan: Free"
echo ""
echo "6. Adicione estas vari√°veis de ambiente:"
echo "   NODE_ENV=production"
echo "   PORT=10000"
echo "   MONGODB_URI=sua-string-de-conexao-mongodb"
echo "   GOOGLE_CLIENT_ID=seu-google-client-id"
echo "   GOOGLE_CLIENT_SECRET=seu-google-client-secret"
echo "   JWT_SECRET=sua-jwt-secret-super-segura"
echo "   FRONTEND_URL=https://sua-app.vercel.app"
echo ""
echo -e "${RED}‚ö†Ô∏è  IMPORTANTE: Anote a URL que o Render gerar!${NC}"
echo ""

read -p "‚úÖ Backend deployado no Render? Digite a URL gerada: " BACKEND_URL

if [ -z "$BACKEND_URL" ]; then
    echo -e "${RED}‚ùå URL do backend √© obrigat√≥ria!${NC}"
    exit 1
fi

# Criar .env.production
echo -e "${YELLOW}üìù Criando .env.production...${NC}"
cat > .env.production << EOF
REACT_APP_API_URL=$BACKEND_URL
EOF

echo -e "${GREEN}‚úÖ .env.production criado com URL: $BACKEND_URL${NC}"

# Instru√ß√µes para CORS
echo ""
echo -e "${YELLOW}PASSO 2: CONFIGURAR CORS${NC}"
echo "Adicione sua URL da Vercel no backend/server.js:"
echo ""
echo "const allowedOrigins = ["
echo "  'http://localhost:3000',"
echo "  'http://localhost:3001',"
echo "  'https://sua-app.vercel.app', // ‚Üê Adicione aqui"
echo "];"
echo ""

read -p "‚úÖ CORS configurado? (y/n): " cors_config
if [[ $cors_config != "y" ]]; then
    echo -e "${RED}‚ùå Configure o CORS antes de continuar!${NC}"
    exit 1
fi

# Deploy na Vercel
echo ""
echo -e "${YELLOW}PASSO 3: DEPLOY NA VERCEL${NC}"
echo "Executando deploy..."

# Verificar se Vercel CLI est√° instalado
if ! command -v vercel &> /dev/null; then
    echo -e "${YELLOW}üì¶ Instalando Vercel CLI...${NC}"
    npm install -g vercel
fi

# Build do projeto
echo -e "${YELLOW}üî® Fazendo build do projeto...${NC}"
npm run build

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erro no build! Verifique os logs acima.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Build conclu√≠do${NC}"

# Deploy na Vercel
echo -e "${YELLOW}üöÄ Fazendo deploy na Vercel...${NC}"
vercel --prod

if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Erro no deploy! Verifique os logs acima.${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}üéâ DEPLOY CONCLU√çDO!${NC}"
echo "==================="
echo ""
echo -e "${BLUE}üìù PR√ìXIMOS PASSOS:${NC}"
echo ""
echo "1. Anote a URL da Vercel que foi gerada"
echo "2. Configure OAuth no Google Cloud Console:"
echo "   - Authorized JavaScript origins: https://sua-app.vercel.app"
echo "   - Authorized redirect URIs: $BACKEND_URL/auth/google/callback"
echo ""
echo "3. Teste as funcionalidades:"
echo "   - Login Google"
echo "   - Criar deck"
echo "   - Adicionar cartas"
echo "   - Galeria compartilhada"
echo ""
echo -e "${GREEN}üöÄ SEU APP EST√Å NO AR! 100% GRATUITO!${NC}"
